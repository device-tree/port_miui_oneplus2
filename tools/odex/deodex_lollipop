#!/bin/bash

# Do not edit this file unless you know what you are doing

romdir=$(pwd)
framedir=$(pwd)/system/framework
appdir=$(pwd)/system/app
privdir=$(pwd)/system/priv-app
tools=$(pwd)/tools
logs=$(pwd)/tools/logs
oat2dex=$(ls $tools | grep oat2dex)

banner() {
	echo ""
	echo "----------------------------------------------------"
	echo "-                                                  -"
	echo "-            Deodex Lollipop for Linux             -"
	echo "-                    by SuperR                     -"
	echo "-                                                  -"
	echo "----------------------------------------------------"
	echo ""
}

banner

if [[ $(java -version 2>&1 | sed 's/java version "\(.*\)\.\(.*\)\..*"/\1\2/; 1q') -lt "17" ]]; then
	clear
	banner
	echo "MISSING DEPENDENCY:"
	echo "You need at least Java 7 to use this tool."
	read -p "Press ENTER to exit"
	exit
fi
if [ ! $(command -v 7za) ]; then
	clear
	banner
	echo "MISSING DEPENDENCY:"
	echo "You need p7zip-full (7za) to use this tool."
	read -p "Press ENTER to exit"
	exit
fi
if [ ! -d "$framedir" ]; then
	clear
	banner
	echo "MISSING FRAMEWORK:"
	echo "You must copy at least the framework directory from"
	echo "your ROM into the system directory located in the"
	echo "root of this tool."
	echo ""
	read -p "Press ENTER to Exit"
	exit
fi

androidversion=$(echo -e "\E[34;47mNot available without build.prop in system directory"; tput sgr0)
if [[ -f $romdir/system/build.prop ]]; then
	androidversion=""
	api=""
	export androidversion=$(cat $romdir/system/build.prop | grep "ro.build.version.release" | cut -d"=" -f2)
	export api=$(cat $romdir/system/build.prop | grep "ro.build.version.sdk" | cut -d"=" -f2)	
	if [[ $api -le "19" ]]; then		
		clear
		banner
		echo "Sorry, this tool only supports deodexing Lollipop."
		echo ""
		read -p "Press ENTER to exit"
		exit
	fi
else
	api=""
	while [[ $api -lt "21" || $api -gt "22" ]] ; do
		clear
		banner
		echo "Type the API level of the ROM and press ENTER."
		echo ""
		echo "HINT:"
		echo "5.0.x = 21"
		echo "5.1.x = 22"
		echo ""
		read api
		clear
	done
fi

arch=""
arch2=""
cd $framedir
export armtest=$(ls -d */ | sed 's/\///' | grep -m 1 arm$)
export arm64test=$(ls -d */ | sed 's/\///' | grep -m 1 arm64$)
export x86test=$(ls -d */ | sed 's/\///' | grep -m 1 x86$)
export x86_64test=$(ls -d */ | sed 's/\///' | grep -m 1 x86_64$)
if [[ $arm64test = "arm64" && -f $framedir/arm64/boot.oat ]]; then	
	export arch="arm64"
	if [[ $armtest = "arm" && -f $framedir/arm/boot.oat ]]; then 
		export arch2="arm"
	fi
elif [[ $x86_64test = "x86_64" && -f $framedir/x86_64/boot.oat ]]; then	
	export arch="x86_64"
	if [[ $x86test = "x86" && -f $framedir/x86/boot.oat ]]; then 
		export arch2="x86"
	fi
elif [[ $armtest = "arm" && -f $framedir/$armtest/boot.oat ]]; then
	export arch="arm"
elif [[ $x86test = "x86" && -f $framedir/$x86test/boot.oat ]]; then
	export arch="x86"
else
	while [[ ! -f $framedir/$arch/boot.oat ]]; do
		clear
		banner
		echo "Configure the arch of your device."
		echo ""
		echo "HINT:"
		echo "Check the framework directory, you should see"
		echo "another directory inside. The name of it should go"
		echo "here (ex. arm, arm64, x86)."
		echo ""
		echo "If you can't get past this part, check the"
		echo "following:"
		echo ""
		echo "1. Make sure this is a Lollipop rom."
		echo "2. Make sure you typed the arch variable correctly."
		echo "3. Make sure your rom is not already deodexed."
		echo ""
		echo "Type the arch of your device and press ENTER."
		echo ""
		read arch 
	done
fi

if [[ -f $framedir/$arch/boot.oat ]]; then
	clear
	banner
	echo "ANDROID VERSION: $androidversion"
	echo "API LEVEL: $api"
	echo "ARCH: $arch"
	if [[ ! $arch2 = "" ]]; then
		echo "ARCH2: $arch2"
	fi  
	echo ""
else
	clear
	banner
	echo "Something went wrong. Sorry for the inconvenience."
	echo ""
	read -p "Press ENTER to return to ROM Tools"
	cd $scripts
	exec ./rom_tools
	exit
fi

rm -rf $logs/*.log

clear
echo ""
echo "----------------------------------------------------"
echo "Deoptimizing boot.oat ..."
echo "----------------------------------------------------"
echo ""

cd $tools
if [[ ! -d "$framedir/$arch/odex" ]]; then
	java -Xmx512m -jar $oat2dex boot $framedir/$arch/boot.oat >> $logs/main.log
fi
if [[ ! $arch2 = "" ]]; then
	if [[ ! -d "$framedir/$arch2/odex" ]]; then
		java -Xmx512m -jar $oat2dex boot $framedir/$arch2/boot.oat >> $logs/main.log
	fi
fi
clear

echo ""
echo "----------------------------------------------------"
echo "Start deodexing /system/app ..."
echo "----------------------------------------------------"
echo ""

if [[ -d $romdir/system/vendor/app ]]; then
	cd $romdir/system/vendor/app
	ls -d */ | sed 's/\///' > $logs/vendorapks.txt
	cd $tools	
	mv "$romdir/system/vendor/app/"* $romdir/system/app
fi

app=""
for app in $( ls $appdir ); do
	if [[ -f "$appdir/$app/$arch/$app.odex.gz" ]]; then
		cd $appdir/$app/$arch
		echo ""
		echo "... Extracting $app.odex.gz"
		echo ""
		7za e "$appdir/$app/$arch/$app.odex.gz" >> $logs/zip.log
	elif [[ -f "$appdir/$app/$arch/$app.odex.xz" ]]; then
		cd $appdir/$app/$arch
		echo ""
		echo "... Extracting $app.odex.xz"
		echo ""
		7za e "$appdir/$app/$arch/$app.odex.xz" >> $logs/zip.log
	fi
done
if [[ ! $arch2 = "" ]]; then
	app=""
	for app in $( ls $appdir ); do
		if [[ -f "$appdir/$app/$arch2/$app.odex.gz" ]]; then
			cd $appdir/$app/$arch2
			echo ""
			echo "... Extracting $app.odex.gz"
			echo ""
			7za e "$appdir/$app/$arch2/$app.odex.gz" >> $logs/zip.log
		elif [[ -f "$appdir/$app/$arch2/$app.odex.xz" ]]; then
			cd $appdir/$app/$arch2
			echo ""
			echo "... Extracting $app.odex.xz"
			echo ""
			7za e "$appdir/$app/$arch2/$app.odex.xz" >> $logs/zip.log
		fi
	done 
fi

cd $tools
app=""
for app in $( ls $appdir ); do
	if [[ -d "$appdir/$app/$arch" ]]; then	
		if [[ $(7za l $appdir/$app/$app.apk | grep classes.dex) = "" ]]; then
			echo ""
			echo "... Deodexing $app"
			echo ""
			java -Xmx512m -jar $oat2dex $appdir/$app/$arch/$app.odex $framedir/$arch/odex >> $logs/main.log
			mv $appdir/$app/$arch/$app.dex $appdir/$app/$arch/classes.dex
			if [[ -f "$appdir/$app/$arch/$app-classes2.dex" ]]; then
				mv $appdir/$app/$arch/$app-classes2.dex $appdir/$app/$arch/classes2.dex
			fi
			if [[ -f "$appdir/$app/$arch/$app-classes3.dex" ]]; then
				mv $appdir/$app/$arch/$app-classes3.dex $appdir/$app/$arch/classes3.dex
			fi
			7za u -tzip $appdir/$app/$app.apk $appdir/$app/$arch/classes*.dex >> $logs/zip.log
			rm -rf $appdir/$app/$arch
		else
			echo ""
			echo "$app is already deodexed ..."
			echo ""
			rm -rf $appdir/$app/$arch
		fi
	fi
done

if [[ ! $arch2 = "" ]]; then
	app=""
	for app in $( ls $appdir ); do
		if [[ -d "$appdir/$app/$arch2" ]]; then
			if [[ $(7za l $appdir/$app/$app.apk | grep classes.dex) = "" ]]; then			
				echo ""
				echo "... Deodexing $app"
				echo ""
				java -Xmx512m -jar $oat2dex $appdir/$app/$arch2/$app.odex $framedir/$arch2/odex >> $logs/main.log
				mv $appdir/$app/$arch2/$app.dex $appdir/$app/$arch2/classes.dex
				if [[ -f "$appdir/$app/$arch2/$app-classes2.dex" ]]; then
					mv $appdir/$app/$arch2/$app-classes2.dex $appdir/$app/$arch2/classes2.dex
				fi
				if [[ -f "$appdir/$app/$arch2/$app-classes3.dex" ]]; then
					mv $appdir/$app/$arch2/$app-classes3.dex $appdir/$app/$arch2/classes3.dex
				fi
				7za u -tzip $appdir/$app/$app.apk $appdir/$app/$arch2/classes*.dex >> $logs/zip.log
				rm -rf $appdir/$app/$arch2
			else
				echo ""
				echo "$app is already deodexed ..."
				echo ""
				rm -rf $appdir/$app/$arch2
			fi
		fi
	done
fi

if [[ -f $logs/vendorapks.txt ]]; then
	vendorapk=""
	cat $logs/vendorapks.txt | while read vendorapk; do
		mv $romdir/system/app/$vendorapk $romdir/system/vendor/app/$vendorapk
	done
	rm -rf $logs/vendorapks.txt
fi

clear

echo ""
echo "----------------------------------------------------"
echo "Start deodexing /system/priv-app ..."
echo "----------------------------------------------------"
echo ""

privapp=""
for privapp in $( ls $privdir ); do
	if [[ -f "$privdir/$privapp/$arch/$privapp.odex.gz" ]]; then
		cd $privdir/$privapp/$arch
		echo ""
		echo "... Extracting $privapp.odex.gz"
		echo ""
		7za e "$privdir/$privapp/$arch/$privapp.odex.gz" >> $logs/zip.log
	elif [[ -f "$privdir/$privapp/$arch/$privapp.odex.xz" ]]; then
		cd $privdir/$privapp/$arch
		echo ""
		echo "... Extracting $privapp.odex.xz"
		echo ""
		7za e "$privdir/$privapp/$arch/$privapp.odex.xz" >> $logs/zip.log
	fi
done
if [[ ! $arch2 = "" ]]; then
	privapp=""
	for privapp in $( ls $privdir ); do
		if [[ -f "$privdir/$privapp/$arch2/$privapp.odex.gz" ]]; then
			cd $privdir/$privapp/$arch2
			echo ""
			echo "... Extracting $privapp.odex.gz"
			echo ""
			7za e "$privdir/$privapp/$arch2/$privapp.odex.gz" >> $logs/zip.log
		elif [[ -f "$privdir/$privapp/$arch2/$privapp.odex.xz" ]]; then
			cd $privdir/$privapp/$arch2
			echo ""
			echo "... Extracting $privapp.odex.xz"
			echo ""
			7za e "$privdir/$privapp/$arch2/$privapp.odex.xz" >> $logs/zip.log
		fi
	done
fi
cd $tools
privapp=""
for privapp in $( ls $privdir ); do
	if [ -d "$privdir/$privapp/$arch" ]; then
		if [[ $(7za l $privdir/$privapp/$privapp.apk | grep classes.dex) = "" ]]; then
			echo ""
			echo "... Deodexing $privapp"
			echo ""
			java -Xmx512m -jar $oat2dex $privdir/$privapp/$arch/$privapp.odex $framedir/$arch/odex >> $logs/main.log
			mv $privdir/$privapp/$arch/$privapp.dex $privdir/$privapp/$arch/classes.dex
			if [[ -f "$privdir/$privapp/$arch/$privapp-classes2.dex" ]]; then
				mv $privdir/$privapp/$arch/$privapp-classes2.dex $privdir/$privapp/$arch/classes2.dex
			fi
			if [[ -f "$privdir/$privapp/$arch/$privapp-classes3.dex" ]]; then
				mv $privdir/$privapp/$arch/$privapp-classes3.dex $privdir/$privapp/$arch/classes3.dex
			fi
			7za u -tzip $privdir/$privapp/$privapp.apk $privdir/$privapp/$arch/classes*.dex >> $logs/zip.log
			rm -rf $privdir/$privapp/$arch
		else
			echo ""
			echo "$privapp is already deodexed ..."
			echo ""
			rm -rf $privdir/$privapp/$arch
		fi
	fi
done
if [[ ! $arch2 = "" ]]; then
	privapp=""
	for privapp in $( ls $privdir ); do
		if [[ -d "$privdir/$privapp/$arch2" ]]; then
			if [[ $(7za l $privdir/$privapp/$privapp.apk | grep classes.dex) = "" ]]; then
				echo ""
				echo "... Deodexing $privapp"
				echo ""
				java -Xmx512m -jar $oat2dex $privdir/$privapp/$arch2/$privapp.odex $framedir/$arch2/odex >> $logs/main.log
				mv $privdir/$privapp/$arch2/$privapp.dex $privdir/$privapp/$arch2/classes.dex
				if [[ -f "$privdir/$privapp/$arch2/$privapp-classes2.dex" ]]; then
					mv $privdir/$privapp/$arch2/$privapp-classes2.dex $privdir/$privapp/$arch2/classes2.dex	
				fi
				if [[ -f "$privdir/$privapp/$arch2/$privapp-classes3.dex" ]]; then
					mv $privdir/$privapp/$arch2/$privapp-classes3.dex $privdir/$privapp/$arch2/classes3.dex
				fi
				7za u -tzip $privdir/$privapp/$privapp.apk $privdir/$privapp/$arch2/classes*.dex >> $logs/zip.log
				rm -rf $privdir/$privapp/$arch2
			else
				echo ""
				echo "$privapp is already deodexed ..."
				echo ""
				rm -rf $appdir/$privapp/$arch2
			fi
		fi
	done
fi
clear

echo ""
echo "----------------------------------------------------"
echo "Start deodexing /system/framework ..."
echo "----------------------------------------------------"
echo ""

cd $framedir/$arch
if [[ ! $(ls $framedir/$arch | grep .gz | rev | cut -c 9- | rev) = "" ]]; then
	frame=""
	for frame in $(ls | grep .gz | rev | cut -c 9- | rev); do
		echo ""
		echo "... Extracting $frame.odex.gz"
		echo ""
		7za e "$frame.odex.gz" >> $logs/zip.log
		rm -rf "$frame.odex.gz"
	done
elif [[ ! $(ls | grep .xz | rev | cut -c 9- | rev) = "" ]]; then
	frame=""
	for frame in $(ls | grep .xz | rev | cut -c 9- | rev); do
		echo ""
		echo "... Extracting $frame.odex.xz"
		echo ""
		7za e $frame.odex.xz >> $logs/zip.log
		rm -rf $frame.odex.xz
	done
fi

cd $tools
frame=""
for frame in $( ls $framedir/$arch | grep .odex | rev | cut -c 6- | rev ); do
	if [[ $(7za l $framedir/$frame.jar | grep classes.dex) = "" ]]; then
		echo ""
		echo "... Deodexing $frame"
		echo ""
		java -Xmx512m -jar $oat2dex $framedir/$arch/$frame.odex $framedir/$arch/odex >> $logs/main.log
		mv $framedir/$arch/$frame.dex $framedir/$arch/classes.dex
		if [[ -f "$framedir/$arch/$frame-classes2.dex" ]]; then
			mv $framedir/$arch/$frame-classes2.dex $framedir/$arch/classes2.dex
		fi
		if [[ -f "$framedir/$arch/$frame-classes3.dex" ]]; then
			mv $framedir/$arch/$frame-classes3.dex $framedir/$arch/classes3.dex
		fi
		if [[ ! -f $framedir/$frame.apk ]]; then
			7za u -tzip $framedir/$frame.jar $framedir/$arch/classes*.dex >> $logs/zip.log
		else
			7za u -tzip $framedir/$frame.apk $framedir/$arch/classes*.dex >> $logs/zip.log
		fi
		rm -rf $framedir/$arch/classes*.dex
	else
		echo ""
		echo "$frame is already deodexed ..."
		echo ""
		rm -rf $framedir/$arch/$frame.odex
	fi
done
frame2=""
for frame2 in $( ls $framedir/$arch/dex | grep .dex | rev | cut -c 5- | rev ); do
	if [[ $(7za l $framedir/$frame2.jar | grep classes.dex) = "" ]]; then
		if [[ $frame2 != *"classes"* ]]; then
			echo ""
			echo "... Deodexing $frame2"
			echo ""
			mv $framedir/$arch/dex/$frame2.dex $framedir/$arch/dex/classes.dex
			if [[ -f "$framedir/$arch/dex/$frame2-classes2.dex" ]]; then
				mv $framedir/$arch/dex/$frame2-classes2.dex $framedir/$arch/dex/classes2.dex
			fi
			if [[ -f "$framedir/$arch/dex/$frame2-classes3.dex" ]]; then
				mv $framedir/$arch/dex/$frame2-classes3.dex $framedir/$arch/dex/classes3.dex
			fi
			if [[ $(ls $framedir | grep $frame2.apk) = "" ]]; then
				7za u -tzip $framedir/$frame2.jar $framedir/$arch/dex/classes*.dex >> $logs/zip.log
			else
				7za u -tzip $framedir/$frame2.apk $framedir/$arch/dex/classes*.dex >> $logs/zip.log
			fi
			rm -rf $framedir/$arch/dex/classes*.dex
		fi
	else
		if [[ $frame2 != *"classes"* ]]; then
			echo ""
			echo "$frame2 is already deodexed ..."
			echo ""
			rm -rf $framedir/$arch/dex/$frame2.dex
		fi
	fi
done
clear

echo ""
echo "----------------------------------------------------"
echo "Cleaning up ..."
echo "----------------------------------------------------"
echo ""
echo ""
rm -rf $framedir/$arch
if [[ ! $arch2 = "" ]]; then
	rm -rf $framedir/$arch2
fi
stillodexed=$(find $romdir/system -name *.odex)
if [[ "$stillodexed" = "" ]]; then
	clear
	banner
	echo "Deodexing complete"
	echo ""
	echo ""
	exit
else
	clear
	banner
	echo "The following odex files are still in your ROM"
	echo ""
	echo -e "\E[34;47m$stillodexed"; tput sgr0
	echo ""
	exit
fi
